{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : null,
    "debugMode" : true,
    "externalId" : {
      "entityType" : "RULE_CHAIN",
      "id" : "f47c5ed0-e623-11ef-8b08-b1b78211b00c"
    },
    "firstRuleNodeId" : {
      "entityType" : "RULE_NODE",
      "id" : "b4e3ef70-e625-11ef-8b08-b1b78211b00c"
    },
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "f47c5ed0-e623-11ef-8b08-b1b78211b00c"
    },
    "name" : "Create Alarm Rule Chain",
    "root" : false,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 0,
      "toIndex" : 2,
      "type" : "True"
    }, {
      "fromIndex" : 1,
      "toIndex" : 4,
      "type" : "Created"
    }, {
      "fromIndex" : 1,
      "toIndex" : 4,
      "type" : "Updated"
    }, {
      "fromIndex" : 2,
      "toIndex" : 3,
      "type" : "SLR140C"
    }, {
      "fromIndex" : 2,
      "toIndex" : 5,
      "type" : "SLR140"
    }, {
      "fromIndex" : 3,
      "toIndex" : 9,
      "type" : "True"
    }, {
      "fromIndex" : 3,
      "toIndex" : 10,
      "type" : "False"
    }, {
      "fromIndex" : 4,
      "toIndex" : 11,
      "type" : "Failure"
    }, {
      "fromIndex" : 5,
      "toIndex" : 1,
      "type" : "Bit5 is set"
    }, {
      "fromIndex" : 5,
      "toIndex" : 7,
      "type" : "Bit3 is set"
    }, {
      "fromIndex" : 5,
      "toIndex" : 8,
      "type" : "Bit4 is set"
    }, {
      "fromIndex" : 6,
      "toIndex" : 4,
      "type" : "Created"
    }, {
      "fromIndex" : 6,
      "toIndex" : 4,
      "type" : "Updated"
    }, {
      "fromIndex" : 7,
      "toIndex" : 6,
      "type" : "Success"
    }, {
      "fromIndex" : 8,
      "toIndex" : 6,
      "type" : "Success"
    }, {
      "fromIndex" : 9,
      "toIndex" : 6,
      "type" : "Success"
    }, {
      "fromIndex" : 10,
      "toIndex" : 6,
      "type" : "Success"
    } ],
    "firstNodeIndex" : 0,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 46,
        "layoutY" : 276
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "if (metadata.deviceType === \"SLR140\") {\n    return Object.keys(msg).some(function(key) {\n        return key.indexOf('Bit1') !== -1 && msg[key] === 0;\n    });\n} else if (metadata.deviceType === \"SLR140C\") {\n    return Object.keys(msg).some(function(key) {\n        return key.indexOf('Bit1') !== -1 && msg[key] === 1;\n    });\n} else {return false;}",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : null,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "b4e3ef70-e625-11ef-8b08-b1b78211b00c"
      },
      "name" : "Check Bit 1",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 915,
        "layoutY" : 115
      },
      "configuration" : {
        "scriptLang" : "JS",
        "alarmDetailsBuildJs" : "var details = {};\r\nif (metadata.prevAlarmDetails) {\r\n    details = JSON.parse(metadata.prevAlarmDetails);\r\n    // remove prevAlarmDetails from metadata\r\n    delete metadata.prevAlarmDetails;\r\n    // now metadata is the same as it comes in this rule node\r\n}\r\n// Only set faultTs if it hasn’t been set before.\r\nif (!details.faultTs && msg.values.Fault1.Timestamp) {\r\n    details.faultTs = msg.values.Fault1.Timestamp;\r\n}\r\nreturn details;\r\n",
        "alarmDetailsBuildTbel" : "var details = {};\nif (metadata.prevAlarmDetails != null) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n    //remove prevAlarmDetails from metadata\n    metadata.remove('prevAlarmDetails');\n    //now metadata is the same as it comes IN this rule node\n}\n// Only set faultTs if it hasn’t been set before.\nif (!details.faultTs && msg.faultTs) {\n    details.faultTs = msg[\"Fault Timestamp\"];\n}\nreturn details;",
        "useMessageAlarmData" : false,
        "overwriteAlarmDetails" : false,
        "alarmType" : "E>",
        "severity" : "WARNING",
        "propagate" : false,
        "relationTypes" : [ ],
        "propagateToOwner" : true,
        "propagateToTenant" : true,
        "dynamicSeverity" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "8f435690-e628-11ef-8b08-b1b78211b00c"
      },
      "name" : "Alarm for E>",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbCreateAlarmNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 302,
        "layoutY" : 245
      },
      "configuration" : {
        "version" : 0
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "218ea9a0-e629-11ef-8b08-b1b78211b00c"
      },
      "name" : "Device Check",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbDeviceTypeSwitchNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 326,
        "layoutY" : 399
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "return Object.keys(msg).some(function(key) {\n    return key.indexOf('Bit3') !== -1 && msg[key] === 1;\n});",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "101a5520-e62e-11ef-8b08-b1b78211b00c"
      },
      "name" : "Check Bit 3 in SLR140C",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1246,
        "layoutY" : 237
      },
      "configuration" : {
        "customerNamePattern" : "Stelmec",
        "createCustomerIfNotExists" : false
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "144eba90-e62f-11ef-8b08-b1b78211b00c"
      },
      "name" : "Assign Alarm",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbAssignToCustomerNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 338,
        "layoutY" : 118
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "for (var key in msg) {\n    if (key.indexOf('Bit3') !== -1 && msg[key] === 0) {\n        return ['Bit3 is set'];\n    } else if (key.indexOf('Bit4') !== -1 && msg[key] ===\n        0) {\n        return ['Bit4 is set'];\n    } else if (key.indexOf('Bit5') !== -1 && msg[key] ===\n        0) {\n        return ['Bit5 is set'];\n    }\n}\nreturn [];",
        "tbelScript" : "if (msgType == 'POST_TELEMETRY_REQUEST') {\n    for (var key in msg) {\n        if (key.indexOf('Bit3') !== -1 && msg[key] === 0) {\n            return ['Bit3 is set'];\n        } else if (key.indexOf('Bit4') !== -1 && msg[key] === 0) {\n            return ['Bit4 is set'];\n        } else if (key.indexOf('Bit5') !== -1 && msg[key] === 0) {\n            return ['Bit5 is set'];\n        }\n    }\n}\nreturn [];"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "25b4d6f0-e7da-11ef-8b08-b1b78211b00c"
      },
      "name" : "Check bits in SLR140",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsSwitchNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 941,
        "layoutY" : 347
      },
      "configuration" : {
        "scriptLang" : "JS",
        "alarmDetailsBuildJs" : "var details = {};\r\nif (metadata.prevAlarmDetails) {\r\n    details = JSON.parse(metadata.prevAlarmDetails);\r\n    // remove prevAlarmDetails from metadata\r\n    delete metadata.prevAlarmDetails;\r\n    // now metadata is the same as it comes in this rule node\r\n}\r\n// Only set faultTs if it hasn’t been set before.\r\nif (!details.faultTs && msg.values.Fault1.Timestamp) {\r\n    details.faultTs = msg.values.Fault1.Timestamp;\r\n}\r\nreturn details;\r\n",
        "alarmDetailsBuildTbel" : "var details = {};\nif (metadata.prevAlarmDetails != null) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n    //remove prevAlarmDetails from metadata\n    metadata.remove('prevAlarmDetails');\n    //now metadata is the same as it comes IN this rule node\n}\n\n\nreturn details;",
        "useMessageAlarmData" : false,
        "overwriteAlarmDetails" : false,
        "alarmType" : "${alarmType}",
        "severity" : "WARNING",
        "propagate" : false,
        "relationTypes" : [ ],
        "propagateToOwner" : true,
        "propagateToTenant" : true,
        "dynamicSeverity" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "9f52faf0-e7e4-11ef-8b08-b1b78211b00c"
      },
      "name" : "Create Fault Alarm",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbCreateAlarmNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 629,
        "layoutY" : 211
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "// Define the keys for the different fault currents.\r\nvar currents = [\"Current E\", \"Current R\", \"Current Y\", \"Current B\"];\r\n\r\n// Start by assuming the first key is the maximum.\r\nvar maxKey = \"Fault \" + currents[0];\r\n\r\n// Loop through the remaining keys.\r\nfor (var i = 1; i < currents.length; i++) {\r\n    if (msg[\"Fault \" + currents[i]] > msg[maxKey]) {\r\n        maxKey = \"Fault \" + currents[i];\r\n    }\r\n}\r\n\r\nvar parts = maxKey.split(\" \");\r\nvar phase = parts[2];\r\n\r\n// If the phase is E, set alarmType to \"E>>\"; otherwise, set it to \"<phase> in I>>\"\r\nif (phase === \"E\") {\r\n    metadata.alarmType = \"E>>\";\r\n} else {\r\n    metadata.alarmType = phase + \" in I>>\";\r\n}\r\n\r\nreturn {\r\n    msg: msg,\r\n    metadata: metadata,\r\n    msgType: msgType\r\n};\r\n",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "dfa89870-e7e5-11ef-8b08-b1b78211b00c"
      },
      "name" : "Which current is greater?",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 609,
        "layoutY" : 308
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "// Define the keys for the different fault currents.\r\nvar currents = [\"Current R\", \"Current Y\", \"Current B\"];\r\n\r\n// Start by assuming the first key is the maximum.\r\nvar maxKey = \"Fault \" + currents[0];\r\n\r\n// Loop through the remaining keys.\r\nfor (var i = 1; i < currents.length; i++) {\r\n    if (msg[\"Fault \" + currents[i]] > msg[maxKey]) {\r\n        maxKey = \"Fault \" + currents[i];\r\n    }\r\n}\r\n\r\n// Extract the phase from maxKey.\r\n// Expect maxKey to be something like \"Fault Current E\"\r\n// Splitting on spaces gives: [\"Fault\", \"Current\", \"E\"]\r\nvar parts = maxKey.split(\" \");\r\nvar phase = parts[2];\r\n\r\n// Set alarmType to \"I> Fault in _ Phase\"\r\nmetadata.alarmType = phase + \" in I>\";\r\n\r\nreturn {\r\n    msg: msg,\r\n    metadata: metadata,\r\n    msgType: msgType\r\n};\r\n",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "39d01fd0-e7e6-11ef-8b08-b1b78211b00c"
      },
      "name" : "Which current is greater?",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 617,
        "layoutY" : 404
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "// Check if any of the fault bit keys are set to 1.\r\nvar faultPhase = \"\";\r\nif (msg[\"140C Alarm Bit4\"] === 1) {\r\n    faultPhase = \"R\";\r\n} else if (msg[\"140C Alarm Bit5\"] === 1) {\r\n    faultPhase = \"Y\";\r\n} else if (msg[\"140C Alarm Bit6\"] === 1) {\r\n    faultPhase = \"B\";\r\n} else if (msg[\"140C Alarm Bit7\"] === 1) {\r\n    faultPhase = \"E\";\r\n}\r\n\r\n// If any fault bit is detected, set the alarm type accordingly.\r\nif (faultPhase !== \"E\") {\r\n    metadata.alarmType = faultPhase + \" in I>>\";\r\n} else {\r\n    metadata.alarmType = \"E>>\";\r\n}\r\n\r\nreturn {\r\n    msg: msg,\r\n    metadata: metadata,\r\n    msgType: msgType\r\n};\r\n",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "6c8fb140-e7e8-11ef-8b08-b1b78211b00c"
      },
      "name" : "Which Bit is set?",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 607,
        "layoutY" : 505
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "// Check if any of the fault bit keys are set to 1.\r\nvar faultPhase = \"\";\r\nif (msg[\"140C Alarm Bit4\"] === 1) {\r\n    faultPhase = \"R\";\r\n} else if (msg[\"140C Alarm Bit5\"] === 1) {\r\n    faultPhase = \"Y\";\r\n} else if (msg[\"140C Alarm Bit6\"] === 1) {\r\n    faultPhase = \"B\";\r\n} else if (msg[\"140C Alarm Bit7\"] === 1) {\r\n    faultPhase = \"E\";\r\n}\r\n\r\n// If any fault bit is detected, set the alarm type accordingly.\r\nif (faultPhase !== \"E\") {\r\n    metadata.alarmType = faultPhase + \" in I>\";\r\n} else {\r\n    metadata.alarmType = \"E>\";\r\n}\r\n\r\nreturn {\r\n    msg: msg,\r\n    metadata: metadata,\r\n    msgType: msgType\r\n};\r\n",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "af0257d0-e7e8-11ef-8b08-b1b78211b00c"
      },
      "name" : "Which Bit is set?",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1215,
        "layoutY" : 356
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);",
        "tbelScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1753351245758,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "f3f25d20-f07d-11ef-8b08-b1b78211b00c"
      },
      "name" : "Log Failure",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}