{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "custom_device_switch_widget",
    "name" : "custom_panel_table_widget",
    "deprecated" : false,
    "image" : null,
    "description" : "Widget to Switch device sending the data in a dashboard.",
    "descriptor" : {
      "type" : "dashboard-interaction",
      "sizeX" : 4,
      "sizeY" : 2,
      "resources" : [ ],
      "templateHtml" : "<div class = \"aqi-widget\">\n    <div class=\"led-display\" ng-style=\"{'background-color': self.color}\"><h3>Current AQI: {{self?.aqi || 'N/A'}}</h3></div>\n</div>",
      "templateCss" : "",
      "controllerScript" : "(function() {\r\n    // Bind the widget instance to a variable\r\n    var widget = this;\r\n    \r\n    widget.onInit = function() {\r\n        console.log(\"Widget context:\", this);\r\n        widget.aqi = \"N/A\";    // Initialize AQI with a default value\r\n        widget.color = \"gray\"; // Default color if no data\r\n    };\r\n\r\n    widget.onDataUpdated = function() {\r\n        console.log(\"Received Data:\", widget.ctx && widget.ctx.data); // Debug log\r\n\r\n        if (!widget.ctx || !widget.ctx.data || widget.ctx.data.length === 0 ||\r\n            !widget.ctx.data[0].data || widget.ctx.data[0].data.length === 0) {\r\n            console.warn(\"No AQI data received.\");\r\n            widget.aqi = \"N/A\";    // Display \"N/A\" if no data\r\n            widget.color = \"gray\"; // Default color when no data\r\n            return;\r\n        }\r\n\r\n        // Safely extract the latest AQI value\r\n        widget.aqi = widget.ctx.data[0].data.slice(-1)[0][1] || \"N/A\";\r\n        console.log(\"Extracted AQI:\", widget.aqi);\r\n\r\n        widget.updateColor(widget.aqi);\r\n    };\r\n\r\n    // Function to update LED color based on AQI range\r\n    widget.updateColor = function(aqi) {\r\n        if (typeof aqi !== \"number\") {\r\n            widget.color = \"gray\"; // Default color if no valid AQI\r\n            return;\r\n        }\r\n\r\n        if (aqi <= 50) {\r\n            widget.color = \"green\"; // Good Air Quality\r\n        } else if (aqi <= 100) {\r\n            widget.color = \"yellow\"; // Moderate Air Quality\r\n        } else if (aqi <= 150) {\r\n            widget.color = \"orange\"; // Unhealthy for Sensitive Groups\r\n        } else if (aqi <= 200) {\r\n            widget.color = \"red\"; // Unhealthy\r\n        } else if (aqi <= 300) {\r\n            widget.color = \"purple\"; // Very Unhealthy\r\n        } else {\r\n            widget.color = \"maroon\"; // Hazardous\r\n        }\r\n    };\r\n}).call(this);",
      "settingsSchema" : "",
      "dataKeySettingsSchema" : "{}",
      "latestDataKeySettingsSchema" : "{}",
      "settingsDirective" : null,
      "dataKeySettingsDirective" : null,
      "latestDataKeySettingsDirective" : null,
      "hasBasicMode" : false,
      "basicModeDirective" : null,
      "defaultConfig" : "{\"targetDeviceAliases\":[],\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"0px\",\"settings\":{\"parseGpioStatusFunction\":\"return body[pin] === true;\",\"gpioStatusChangeRequest\":{\"method\":\"setGpioStatus\",\"paramsBody\":\"{\\n   \\\"pin\\\": \\\"{$pin}\\\",\\n   \\\"enabled\\\": \\\"{$enabled}\\\"\\n}\"},\"requestTimeout\":500,\"switchPanelBackgroundColor\":\"#b71c1c\",\"gpioStatusRequest\":{\"method\":\"getGpioStatus\",\"paramsBody\":\"{}\"},\"gpioList\":[{\"pin\":1,\"label\":\"GPIO 1\",\"row\":0,\"col\":0,\"_uniqueKey\":0},{\"pin\":2,\"label\":\"GPIO 2\",\"row\":0,\"col\":1,\"_uniqueKey\":1},{\"pin\":3,\"label\":\"GPIO 3\",\"row\":1,\"col\":0,\"_uniqueKey\":2}]},\"title\":\"Device-Switch Widget\"}"
    },
    "externalId" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "aa89c8f0-e3bf-11ef-8b08-b1b78211b00c"
    },
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "aa89c8f0-e3bf-11ef-8b08-b1b78211b00c"
    },
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}